// trefoil1.fe

// Evolver data for Seifert surface with boundary the trefoil knot
// the curve is taken to lie on a torus -- (2,3) curve
// the trefoil is right-handed

PARAMETER  RHO = 0.4   // meridional radius of torus; azimuthal taken to be 1
PARAMETER  OFFSET = pi/18   // purely for convenience

boundary 1 parameters 1     //  boundary curve
x1:  ( 1.0 + RHO * sin(3*p1+3*OFFSET) ) * cos(2*p1+2*OFFSET)
x2:  ( 1.0 + RHO * sin(3*p1+3*OFFSET) ) * sin(2*p1+2*OFFSET)
x3:  RHO * cos(3*p1+3*OFFSET)
//x3:  - RHO * cos(3*p1+3*OFFSET)    // substitute this to make the trefoil left-handed

vertices   // given in terms of boundary parameter
1    0.00  boundary 1   fixed
2    pi/9  boundary 1   fixed
3  2*pi/9  boundary 1   fixed
4    pi/3  boundary 1   fixed
5  4*pi/9  boundary 1   fixed
6  5*pi/9  boundary 1   fixed
7  2*pi/3  boundary 1   fixed
8  7*pi/9  boundary 1   fixed
9  8*pi/9  boundary 1   fixed
10   pi    boundary 1   fixed
11 10*pi/9 boundary 1   fixed
12 11*pi/9 boundary 1   fixed
13 4*pi/3  boundary 1   fixed
14 13*pi/9 boundary 1   fixed
15 14*pi/9 boundary 1   fixed
16 5*pi/3  boundary 1   fixed
17 16*pi/9 boundary 1   fixed
18 17*pi/9 boundary 1   fixed

edges
1    1  2  boundary 1   fixed
2    2  3  boundary 1   fixed
3    3  4  boundary 1   fixed
4    4  5  boundary 1   fixed
5    5  6  boundary 1   fixed
6    6  7  boundary 1   fixed
7    7  8  boundary 1   fixed
8    8  9  boundary 1   fixed
9    9  10 boundary 1   fixed
10   10 11 boundary 1   fixed
11   11 12 boundary 1   fixed
12   12 13 boundary 1   fixed
13   13 14 boundary 1   fixed
14   14 15 boundary 1   fixed
15   15 16 boundary 1   fixed
16   16 17 boundary 1   fixed
17   17 18 boundary 1   fixed
18   18 1  boundary 1   fixed
19   2  10 
20   8  16 
21   14 4 
22   18 11 
23   6  17 
24   12 5 

faces
1   22 11 24 5 23 17  // upper disc
2   2 3 -21 14 15 -20 8 9 -19  // lower disc
3   19 10 -22 18 1 
4   21 4 -24 12 13 
5   20 16 -23 6 7 

read

// simple set of commands to get things going
gogo := { r; u; r; g 2; u 2; g 2; t 0.1; u 2; g 2; u 2; }

// run command
go100 := { g 100; u 3; t 0.03; u 3 }
